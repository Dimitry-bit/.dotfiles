[
  // Window Managemnt
  {
    "key": "tab",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSizje && inlineSuggestionVisible && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "workbench.action.nextEditor",
    "when": "!isQuickOpen && !terminalFocus && neovim.mode == normal"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.previousEditor",
    "when": "!isQuickOpen && !terminalFocus && neovim.mode == normal"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "!suggestWidgetVisible && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "!suggestWidgetVisible && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+e",
    "command": "ctrl+e",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "ctrl+t",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+r",
    "command": "ctrl+r",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+x",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.closeSidebar",
        "workbench.action.closeAuxiliaryBar",
        "workbench.action.closePanel",
      ],
    },
    "when": "!terminalFocus"
  },
  {
    "key": "alt+shift+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+shift+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+shift+j",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+shift+k",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+shift+j",
    "command": "workbench.action.decreaseViewSize",
    "when": "editorTextFocus && nvim.mode != insert"
  },
  {
    "key": "alt+shift+k",
    "command": "workbench.action.increaseViewSize",
    "when": "editorTextFocus && nvim.mode != insert"
  },
  {
    "key": "alt+m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  {
    "key": "alt+/",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+1",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled",
  },
  {
    "key": "alt+2",
    "command": "workbench.action.output.toggleOutput",
  },
  {
    "key": "alt+3",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active",
  },
  {
    "key": "alt+p",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active",
  },
  {
    "key": "alt+q",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+e",
    "command": "-workbench.view.explorer",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+e",
    "command": "workbench.view.explorer",
    "when": "!explorerViewletVisible"
  },
  {
    "key": "alt+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible"
  },
  {
    "key": "alt+p",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active",
  },
  {
    "key": "shift shift",
    "command": "workbench.action.showCommands",
  },
  {
    "key": "ctrl+alt+s",
    "command": "workbench.action.openSettings",
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
    "when": "editorTextFocus && neovim.mode == normal"
  },
  {
    "key": "space ,",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
    "when": "(editorTextFocus && neovim.mode != insert) || (!inputFocus)"
  },
  {
    "key": "space .",
    "command": "workbench.action.quickOpen",
    "when": "(editorTextFocus && neovim.mode != insert) || (!inputFocus)"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeActiveEditor",
    "when": "!filesExplorerFocus && !searchViewletFocus && !terminalFocus"
  },
  // Launcher
  // LSP
  {
    "key": "space r m",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.function"
    },
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "space r v",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.variable"
    },
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "space r f",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.field"
    },
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "space r n",
    "command": "editor.action.rename",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "space r r",
    "command": "editor.action.refactor",
    "when": "editorTextFocus && neovim.mode == normal"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && !editorReadonly && neovim.mode == normal"
  },
  {
    "key": "ctrl+alt+l",
    "command": "editor.action.formatDocument",
    "when": "editorTextFocus && !editorReadonly && neovim.mode != insert"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly && neovim.mode != insert"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly && neovim.mode != insert"
  },
  {
    "key": "ctrl+p",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "alt+shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl ctrl",
    "command": "workbench.action.showAllSymbols",
    "when": "editorTextFocus"
  },
  // LSP
  // Build
  {
    "key": "space b d",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped' && editorTextFocus && neovim.mode == normal"
  },
  {
    "key": "space b d",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive' && editorTextFocus && neovim.mode == normal"
  },
  {
    "key": "space b d",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode && editorTextFocus && neovim.mode == normal"
  },
  // Build
  // Neovim Passthrough
  // Note: Workaround to fix viewport sync
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "vscode-neovim.send",
          "args": "<C-u>",
        },
        // Note: Should not work, but it does
        // Not the most robust solution
        {
          "command": "vscode-neovim.send",
          "args": "zb",
        }
      ],
    },
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "vscode-neovim.send",
          "args": "<C-d>",
        },
        // Note: Should not work, but it does
        // Not the most robust solution
        {
          "command": "vscode-neovim.send",
          "args": "zt",
        }
      ],
    },
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "g",
    "command": "vscode-neovim.send",
    "args": "g",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "k",
    "command": "vscode-neovim.compositeEscape1",
    "args": "k",
    "when": "neovim.mode == insert && editorTextFocus",
  },
  {
    "key": "j",
    "command": "vscode-neovim.compositeEscape1",
    "args": "j",
    "when": "neovim.mode == insert && editorTextFocus",
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  // Neovim Passthrough
]